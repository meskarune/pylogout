#!/bin/bash

# script to gracefully exit a WM with the option to add a timeout
# in secs, min, hours or days
# The script depends on wmctrl
 
# the usage message
usage() {
    echo "Usage is: $0 OPTION [TIME]"
    echo
    echo "  Option:"
    echo "    -h    halt, poweroff"
    echo "    -r    reboot"
    echo
    echo "  Time:"
    echo "    NUMBER[SUFFIX]"
    echo "    Suffix is \"s\" for seconds"
    echo "              \"m\" for minutes"
    echo "              \"h\" for hours"
    echo "              \"d\" for days"
    exit 1
}

# our local vars
action="$1"
time="${2:-0}"  #default timeout is now
 
# check for correct form of arguments
if [[ -z "$action" || ! $time =~ ^[[:digit:]]+[s|m|h|d]?$ ]]; then
    usage
fi
 
# gracefully close all apps
close_apps(){
    wmctrl -l -p | awk '{print $3}' | while read PID; do
        kill -15 $PID || echo "$PID not closed"
    done
}
 
# shutdown
shut(){
    dbus-send --system --print-reply \
    --dest="org.freedesktop.Hal" \
    /org/freedesktop/Hal/devices/computer \
    org.freedesktop.Hal.Device.SystemPowerManagement.Shutdown
}

# reboot
rebt(){
    dbus-send --system --print-reply \
    --dest="org.freedesktop.Hal" \
    /org/freedesktop/Hal/devices/computer \
    org.freedesktop.Hal.Device.SystemPowerManagement.Reboot
}
 
# do it
case $action in
    -r) sleep +"$time" && close_apps && rebt && openbox --exit ;;
    -h) sleep +"$time" && close_apps && shut && openbox --exit ;;
     *) usage ;;
esac
